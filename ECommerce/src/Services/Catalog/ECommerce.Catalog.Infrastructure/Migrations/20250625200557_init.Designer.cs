// <auto-generated />
using System;
using ECommerce.Catalog.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Catalog.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20250625200557_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Catalog.Domain.Aggregates.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 6, 25, 20, 5, 56, 261, DateTimeKind.Utc).AddTicks(1108),
                            Description = "Elektronik Ürünler",
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 6, 25, 20, 5, 56, 261, DateTimeKind.Utc).AddTicks(1120),
                            Description = "Giyim Ürünler,",
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 6, 25, 20, 5, 56, 261, DateTimeKind.Utc).AddTicks(1122),
                            Description = "Kozmetik Ürünler",
                            Name = "Kozmetik"
                        });
                });

            modelBuilder.Entity("ECommerce.Catalog.Domain.Aggregates.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("051c2d42-a940-4082-b50a-aa9efcadb2ff"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 6, 25, 20, 5, 56, 261, DateTimeKind.Utc).AddTicks(1460),
                            Description = "Akıllı telefon",
                            ImageUrl = "noimage.png",
                            Name = "Samsung Galaxy S21",
                            Price = 9999.99m,
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("158b14cd-8a97-4a9e-9109-d5f4db325ed1"),
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 6, 25, 20, 5, 56, 261, DateTimeKind.Utc).AddTicks(1512),
                            Description = "Akıllı telefon",
                            ImageUrl = "noimage.png",
                            Name = "Apple iPhone 13",
                            Price = 12999.99m,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("f9e83617-bad1-4617-9329-8ded2f129f12"),
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 6, 25, 20, 5, 56, 261, DateTimeKind.Utc).AddTicks(1516),
                            Description = "Spor ayakkabı",
                            ImageUrl = "noimage.png",
                            Name = "Nike Air Max",
                            Price = 799.99m,
                            Stock = 100
                        },
                        new
                        {
                            Id = new Guid("9718982f-4fc1-4c84-b302-e16d1b2aef1e"),
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 6, 25, 20, 5, 56, 261, DateTimeKind.Utc).AddTicks(1674),
                            Description = "Saç şampuanı",
                            ImageUrl = "noimage.png",
                            Name = "L'Oréal Paris Şampuan",
                            Price = 49.99m,
                            Stock = 200
                        });
                });

            modelBuilder.Entity("ECommerce.Catalog.Domain.Aggregates.Product", b =>
                {
                    b.HasOne("ECommerce.Catalog.Domain.Aggregates.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.Catalog.Domain.Aggregates.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
